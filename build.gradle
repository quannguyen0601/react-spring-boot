buildscript {

	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.nquan.boot-react'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//
build << {
	println 'build jar REACT SPRING BOOT'
}

task myFrontEndBuildTask(type: Exec) {
	println 'build FrontEnd REACT'

	workingDir "$projectDir/src/main/web_app"

	commandLine "npm", "install"

	commandLine "npm", "run", "build"
}

task copyFilesTask(type: Copy) {
	println 'Copy build FrontEnd'

	dependsOn myFrontEndBuildTask

	description = 'Copy files web_app build'

	from "$projectDir/src/main/web_app/build"
	into "$projectDir/src/main/resources/public"
}

build.dependsOn copyFilesTask


task runDevFront(type: Exec){

	workingDir "$projectDir/src/main/web_app"

	commandLine "npm", "install"

	commandLine "npm", "run", "start"
}

